plugins {
    id("com.android.library")
    id("org.jetbrains.kotlin.multiplatform")
    id("maven-publish")
    id 'org.jetbrains.kotlin.plugin.serialization' version "$versions_kotlin"
}
apply plugin: "org.jlleitschuh.gradle.ktlint"

group = "ch.dreipol.dreiattest.multiplatform"


kotlin {
    ios("ios") {
        binaries {
            framework()
        }
    }

    android("android") {
        publishAllLibraryVariants()
    }

    explicitApi()

    sourceSets["commonMain"].dependencies {
        implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions_coroutines")
        implementation("io.ktor:ktor-client-core:$versions_ktor")
        implementation("io.ktor:ktor-client-json:$versions_ktor")
        implementation("io.ktor:ktor-client-logging:$versions_ktor")
        implementation("io.ktor:ktor-client-serialization:$versions_ktor")
        implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$versions_serialization"
        implementation("co.touchlab:kermit:$versions_kermit")
    }

    sourceSets["commonTest"].dependencies {
        implementation("org.jetbrains.kotlin:kotlin-test-common")
        implementation("org.jetbrains.kotlin:kotlin-test-annotations-common")
    }

    sourceSets["androidMain"].dependencies {
        implementation "com.google.android.gms:play-services-safetynet:$versions_safety_net"
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$versions_play_services_coroutines"
        implementation("io.ktor:ktor-client-android:$versions_ktor")
    }

    sourceSets["iosMain"].dependencies {
        implementation("io.ktor:ktor-client-ios:$versions_ktor")
    }
}

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 15
    }
    sourceSets {
        main {
            manifest.srcFile 'src/androidMain/AndroidManifest.xml'
        }
    }
    buildTypes {
        //This is for MultiplatformSettings
        debug {
            // MPP libraries don't currently get this resolution automatically
            matchingFallbacks = ['release']
        }
        release {
            minifyEnabled false
        }
    }
}


// workaround for https://youtrack.jetbrains.com/issue/KT-27170
configurations {
    compileClasspath
}

ktlint {
    ignoreFailures.set(false)
}

tasks["build"].dependsOn("ktlintFormat")
